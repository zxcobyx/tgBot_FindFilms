import re
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, ContextTypes
from functions.find_torrent import find_torrent
from functions.torrent_utils import add_torrent_by_url, get_torrents_status, add_torrent_by_url_wn

class States:
    WAITING_FOR_TORRENT_QUERY = 1
    WAITING_FOR_TORRENT_NAME = 2
    WAITING_FOR_TORRENT_NAME_OLD = 3

async def start(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫–∏."""
    user = update.effective_user
    keyboard = [
        [
            InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç", callback_data='find_trnt'),
            InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å", callback_data='status')
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}!",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def start_callback(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫–∏."""
    user = update.effective_user
    keyboard = [
        [
            InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç", callback_data='find_trnt'),
            InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å", callback_data='status')
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.callback_query.edit_message_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}!",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def find_trnt(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.callback_query.edit_message_text(
        text="–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏?\n–ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚¨Ö –ù–∞–∑–∞–¥",
        reply_markup=reply_markup
    )

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data['state'] = States.WAITING_FOR_TORRENT_QUERY

async def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç
    if context.user_data.get('state') == States.WAITING_FOR_TORRENT_QUERY:
        user_query = text
        await find_torrent(update, user_query)
        context.user_data['state'] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    elif context.user_data.get('state') == States.WAITING_FOR_TORRENT_NAME:
        new_name = text
        torrent_url = context.user_data.get('torrent_url')

        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ—Ä—Ä–µ–Ω—Ç –ø–æ URL —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
            await add_torrent_by_url(torrent_url, new_name=new_name)

            keyboard = [
                [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')],
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text(
                text=f"–¢–æ—Ä—Ä–µ–Ω—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ–¥ –∏–º–µ–Ω–µ–º '{new_name}'.",
                reply_markup=reply_markup
            )
        except Exception as e:
            keyboard = [
                [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')],
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text(
                text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞.",
                reply_markup=reply_markup
            )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–º–µ–Ω–∏
        context.user_data['state'] = None

async def download(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑ callback_data
    match = re.match(r'download_(\d+)_(.*)', query.data)
    if match:
        index = match.group(1)
        torrent_url = match.group(2)
        
        if not torrent_url.startswith(('http://', 'https://')):
            torrent_url = 'https://' + torrent_url.lstrip('/')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ—Ä—Ä–µ–Ω—Ç–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        context.user_data['torrent_url'] = torrent_url
        context.user_data['torrent_index'] = index
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è —Ç–æ—Ä—Ä–µ–Ω—Ç–∞ 
        '''
        –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Å—Ç–∞–≤–∏—Ç —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞ (—Å—Ç–æ–∫–æ–≤–æ–µ)
        '''
        keyboard = [
            [InlineKeyboardButton("üíæ –û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data='keep_current_name')]        
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(
            text="–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–≤–∞—Ç—å —Ç–æ—Ä—Ä–µ–Ω—Ç?",
            reply_markup=reply_markup
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
        context.user_data['state'] = States.WAITING_FOR_TORRENT_NAME
    else:
        await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
        return

'''
–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–≥—Ä—É–∂–∞—é—â–∏—Ö—Å—è —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤
'''
async def status(update: Update, context: CallbackContext) -> None:
    """–ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–∞—é—â–∏—Ö—Å—è —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤."""
    torrents_status = get_torrents_status()
    
    if torrents_status is None or len(torrents_status) == 0:
        await update.callback_query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è
        keyboard = [
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.edit_message_text(
            text="–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.",
            reply_markup=reply_markup
        )
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –∫–∞–∂–¥–æ–≥–æ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞
    message = "–°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∂–∞—é—â–∏—Ö—Å—è —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤:\n"
    for i, torrent in enumerate(torrents_status, 1):
        message += f"{i}: {torrent['name']}\n"
        message += f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {torrent['progress']:.1f}%\n\n"
    
    await update.callback_query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è

    keyboard_ = [
        [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')]
    ]
    reply_markup_ = InlineKeyboardMarkup(keyboard_)

    await update.callback_query.edit_message_text(
        message,
        reply_markup=reply_markup_
    )

async def keep_current_name(update: Update, context: CallbackContext) -> None:
    torrent_url = context.user_data.get('torrent_url')
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ—Ä—Ä–µ–Ω—Ç –ø–æ URL —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
        await add_torrent_by_url_wn(torrent_url)

        keyboard = [
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.callback_query.edit_message_text(
            text=f"–¢–æ—Ä—Ä–µ–Ω—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –∏–º–µ–Ω–µ–º.",
            reply_markup=reply_markup
        )
    except Exception as e:
        keyboard = [
                [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data='back_to_start')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.callback_query.edit_message_text(
            text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞.",
            reply_markup=reply_markup
        )